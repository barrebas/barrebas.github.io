<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2015 | staring into /dev/null]]></title>
  <link href="http://barrebas.github.io/blog/categories/2015/atom.xml" rel="self"/>
  <link href="http://barrebas.github.io/"/>
  <updated>2015-02-01T17:23:16+01:00</updated>
  <id>http://barrebas.github.io/</id>
  <author>
    <name><![CDATA[barrebas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[(Semi) Weekly Roundup 2015 #3]]></title>
    <link href="http://barrebas.github.io/blog/2015/02/01/semi-weekly-roundup-2015-number-3/"/>
    <updated>2015-02-01T17:01:44+01:00</updated>
    <id>http://barrebas.github.io/blog/2015/02/01/semi-weekly-roundup-2015-number-3</id>
    <content type="html"><![CDATA[<p>So maybe &lsquo;weekly&rsquo; isn&rsquo;t really the right word for these posts ;]</p>

<!-- more -->


<p>With all the stuff going on in the weekends, I kinda missed a few of these roundups.</p>

<p>Don&rsquo;t have anything to do and fancy winning awesome prizes? Head over to <a href="https://vulnhub.com">VulnHub.com</a> and give <a href="https://www.vulnhub.com/entry/sokar-1,113/">Sokar</a> by <a href="https://twitter.com/_RastaMouse">rasta_mouse</a> a spin! VulnHub is two years old and this VM is run as a competition to celebrate!</p>

<p>This <a href="https://labs.mwrinfosecurity.com/blog/2014/08/15/windows-8-kernel-memory-protections-bypass/">post by mwrsecurity</a> goes into great detail about bypassing Windows 8 kernel memory protection strategies. It talks about allocating user-land memory and then corrupting paging structures, so that the kernel thinks believes that piece of memory is executable as kernel-land code&hellip; Pretty clever stuff!</p>

<p>I came across this exploit, which allows attackers to change the <a href="http://packetstormsecurity.com/files/130113/D-Link-DSL-2740R-Unauthenticated-Remote-DNS-Change.html">DNS settings of a specific model D-Link router</a> remotely and <em>unauthenticated</em>. Scary stuff! Makes you wonder if manufacturers spend any time at all securing these appliances&hellip;</p>

<p>This <a href="http://powerofcommunity.net/poc2014/tombkeeper.pdf">PDF slidedeck</a> shows how to break out of a JavaScript virtual machine by abusing JS string objects. It&rsquo;s not very detailed and the explanation lacks a bit, but it&rsquo;s still quite an intriguing look into how these exploits work.</p>

<p>And finally, a while ago I found <a href="http://www.willhackforsushi.com/?p=581">this blog on willhackforsushi.com</a> which actually refers to one of my <a href="http://staringintodevnull.blogspot.nl/2013/12/making-it-ra1nx.html">old boot2root writeups</a>! In that VM, I had difficulty getting <code>sqlmap</code> to upload a webshell and I finally did it manually. The problem was fixed by Josh by starting with valid data for the SQL injection! The SQL code that stores the webshell on the remote server needs at least one valid line from the database and this condition is only triggered when valid input (like an <em>existing</em> username) is supplied. Good job figuring out the root cause!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weekly Roundup 2015 #2]]></title>
    <link href="http://barrebas.github.io/blog/2015/01/12/weekly-roundup-2015-number-2/"/>
    <updated>2015-01-12T18:02:00+01:00</updated>
    <id>http://barrebas.github.io/blog/2015/01/12/weekly-roundup-2015-number-2</id>
    <content type="html"><![CDATA[<p>A bit later and shorter than planned due to the CTF, but here&rsquo;s another weekly roundup!</p>

<!-- more -->


<p>I want to kick this one off with a beautiful writeup by <a href="https://twitter.com/dronesec">drone</a> on a <a href="https://hatriot.github.io/blog/2015/01/06/ntpdc-exploit/">local ntpdc overflow</a>. drone really takes you down the rabbit hole in terms of exploit dev and even manages to find that Debian x86 does not ship with PAE enabled. This means that protections such as NX are not enabled on these systems! Very detailed writeup which discusses the buffer overflows and the use of ROP and I highly recommend it.</p>

<p>No less than three VMs were released on VulnHub this week! <a href="https://www.vulnhub.com/entry/pandoras-box-1,111/">Pandora&rsquo;s Box</a> by c0ne and <a href="https://www.vulnhub.com/entry/the-purge-1,110/">the Purge</a> and <a href="https://www.vulnhub.com/entry/the-frequency-1,112/">theFrequency</a> by strata. I highly recommend Pandora&rsquo;s Box if you like exploit dev. I finished the Purge, which felt quite polished and is <em>really</em> left-field. Still working on the Frequency, which shows me a whole different world of audio stego!</p>

<p>Apparently, ASUS routers have a vulnerable service listening on UDP 9999 with runs with root privileges. This <em>infosrv</em> serivce <a href="https://github.com/jduck/asus-cmd">contains a vulnerability</a> that allows unauthenticated root command execution. There&rsquo;s also a published <a href="http://www.exploit-db.com/exploits/35688/">exploit</a> already. It&rsquo;s a pretty interesting writeup, including technical details. It seems to boil down to a programmer mistakenly using <em>memcpy</em> where he or she meant to use <em>memcmp</em>. Ouch.</p>

<p>Finally, I came across this blog that describes SROP or <a href="http://thisissecurity.net/2015/01/03/playing-with-signals-an-overview-on-sigreturn-oriented-programming/">Sigreturn Oriented Programming</a>, a variation on ROP. According to the blog post, it&rsquo;s a way to make stack overflows more reliable. The way I understand it, you need to overwrite a saved return address to execute a <em>sigreturn</em> syscall, which in turn allows one to call any syscall by forging the appropriate <code>uc_mcontect</code> struct in memory. This is convenient as one needs less gadgets to pull it off. Cool stuff! Hope to see this in one of the VulnHub VMs once :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weekly Roundup 2015 #1]]></title>
    <link href="http://barrebas.github.io/blog/2015/01/03/weekly-roundup-2015-number-1/"/>
    <updated>2015-01-03T08:54:42+01:00</updated>
    <id>http://barrebas.github.io/blog/2015/01/03/weekly-roundup-2015-number-1</id>
    <content type="html"><![CDATA[<p>Time for another weekly round-up of interesting links!</p>

<!-- more -->


<p>I&rsquo;ll kick this one off with a very interesting blog about <a href="http://v0ids3curity.blogspot.in/2014/12/return-to-vdso-using-elf-auxiliary.html">bypassing ASLR on 64 bit systems using ELF auxilliary vectors</a> by Reno Robert. This technique leaks the address of the VDSO (Virtual Dynamic Shared Object). The VDSO can then be used as a source for ROP gadgets. The entire process of writing a functioning exploit is described in great detail, with a proof-of-concept in <code>python</code>. Furthermore, the author notes that the address of VDSO is not very random, making bruteforcing an option even on 64 bit systems. Very nice read, very detailed!</p>

<p>I&rsquo;d like to follow up this exploitation goodness with a link to Google&rsquo;s Project Zero blog: <a href="http://googleprojectzero.blogspot.nl/2015/01/finding-and-exploiting-ntpd.html">Finding and exploiting ntpd vulnerabilities</a> by Stephen RÃ¶ttger. This is a really in-depth story about fuzzing the NTPD daemon, coming up with something that barely looks like a vulnerability and through pure persistence, turning it into a full exploit. Amazing stuff!</p>

<p>If you like wargames, this one is sure to get your blood pumping: <a href="https://overthewire.org/wargames/drifter/">Drifter over at Overthewire</a> is online! It&rsquo;s a wargame along the lines of <a href="http://overthewire.org/wargames/vortex/">Vortex</a>, which I&rsquo;ve started playing this week. If you want to learn about binary exploitation, <a href="https://overthewire.org/">overthewire</a> is <strong>the</strong> place to start!</p>

<p>The folks over at rapid7 have now officially said <a href="https://community.rapid7.com/community/metasploit/blog/2014/12/08/good-bye-msfpayload-and-msfencode">farewell to msfpayload &amp; msfencode</a>. These awesome tools are being superseded by <code>msfvenom</code>. This blog post gives a basic rundown of the new tool and five good examples of it&rsquo;s usage. Further documentation about <code>msfvenom</code> can be found on <a href="https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom">rapid7&rsquo;s github</a>.</p>

<p>Some things to look forward to in the land of VulnHub VMs: <a href="https://r3v3rs3r.wordpress.com">c0ne</a> is currently making a VM focused on binary exploitation. I can say from first hand that these binaries are really fun to exploit! Furthermore, strata&rsquo;s VM is being beta-tested and is due soon.</p>

<p>Finally, <a href="http://blog.vulnhub.com/2014/01/vulnhub-turns-0x01.html">VulnHub&rsquo;s birthday</a> is coming up. A little mouse told me there might just be a new competition coming&hellip;</p>
]]></content>
  </entry>
  
</feed>
